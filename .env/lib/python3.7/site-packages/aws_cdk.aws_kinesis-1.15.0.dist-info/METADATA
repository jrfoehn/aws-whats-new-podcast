Metadata-Version: 2.1
Name: aws-cdk.aws-kinesis
Version: 1.15.0
Summary: CDK Constructs for AWS Kinesis
Home-page: https://github.com/aws/aws-cdk
Author: Amazon Web Services
License: UNKNOWN
Project-URL: Source, https://github.com/aws/aws-cdk.git
Platform: UNKNOWN
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: jsii (~=0.19.0)
Requires-Dist: publication (>=0.0.3)
Requires-Dist: aws-cdk.aws-iam (>=1.15.0,~=1.15)
Requires-Dist: aws-cdk.aws-kms (>=1.15.0,~=1.15)
Requires-Dist: aws-cdk.aws-logs (>=1.15.0,~=1.15)
Requires-Dist: aws-cdk.core (>=1.15.0,~=1.15)

## Amazon Kinesis Construct Library

<html></html>---


![Stability: Experimental](https://img.shields.io/badge/stability-Experimental-important.svg?style=for-the-badge)

> **This is a *developer preview* (public beta) module. Releases might lack important features and might have
> future breaking changes.**
>
> This API is still under active development and subject to non-backward
> compatible changes or removal in any future version. Use of the API is not recommended in production
> environments. Experimental APIs are not subject to the Semantic Versioning model.

---
<html></html>

Define an unencrypted Kinesis stream.

```python
# Example may have issues. See https://github.com/aws/jsii/issues/826
Stream(self, "MyFirstStream")
```

### Encryption

Define a KMS-encrypted stream:

```python
# Example may have issues. See https://github.com/aws/jsii/issues/826
stream = new_stream(self, "MyEncryptedStream",
    encryption=StreamEncryption.Kms
)

# you can access the encryption key:
assert(stream.encryption_key instanceof kms.Key)
```

You can also supply your own key:

```python
# Example may have issues. See https://github.com/aws/jsii/issues/826
my_kms_key = kms.Key(self, "MyKey")

stream = Stream(self, "MyEncryptedStream",
    encryption=StreamEncryption.Kms,
    encryption_key=my_kms_key
)

assert(stream.encryption_key === my_kms_key)
```


